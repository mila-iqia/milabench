system:
  # Default arch
  arch: cuda
  # sshkey used in remote milabench operations
  sshkey: ~/.ssh/id_ed25519

  # Configures how to use docker 
  docker:
    executable: podman
    image: ghcr.io/mila-iqia/milabench:${system.arch}-nightly
    base: /tmp/workspace
    args: [
       -it, --rm, --ipc=host, --gpus=all, --network, host, --privileged,
       --log-driver=none,
       -e, MILABENCH_HF_TOKEN=<TOKEN>,
       -v, "${system.docker.base}/data:/milabench/envs/data",
       -v, "${system.docker.base}/runs:/milabench/envs/runs",
    ]

  # Nodes list
  nodes:
      # Alias used to reference the node
    - name: manager
      ip: 192.168.11.11
      port: 5000
      # Use this node as the master node or not
      main: true
      # User to use in remote milabench operations
      user: manager

    - name: node1
      ip: 192.168.11.12
      main: false
      user: username

    - name: node2
      ip: 192.168.11.13
      main: false 
      user: username

multirun:
  runs:
    # Force batch size to populate the sizing model
    # - name: "bs{sizer.mult}.{time}"
    #   matrix:
    #     sizer.auto: 1
    #     sizer.mult: [0.5, 2]
    #     sizer.save: ["/home/testroot/milabench/config/scaling/MI325.yaml"]
    
    # - name: "bs{sizer.add}.{time}"
    #   matrix:
    #     sizer.auto: 1
    #     sizer.add: [-8, 0, 8, 16]
    #     sizer.save: ["/home/testroot/milabench/config/scaling/MI325.yaml"]
    

    # Matrix run
    - name: "c{sizer.capacity}_m{sizer.multiple}_w{cpu.n_workers}.{time}"
      matrix:
        cpu.enabled: 1
        cpu.n_workers: [8, 16]
        sizer.auto: 1
        sizer.capacity: [64Go, 128Go, All]
        sizer.multiple: 8
        sizer.save: ["/home/testroot/milabench/config/scaling/MI325.yaml"]

    # Auto run
    - name: "auto.{time}"
      matrix:
        cpu.enabled: 1
        sizer.auto: 1
        sizer.multiple: 8
        sizer.save: ["/home/testroot/milabench/config/scaling/MI325.yaml"]
