_sb3:
  inherits: _defaults
  definition: ../benchmarks/stable_baselines3
  group: sb3
  plan:
    method: njobs
    n: 1

ppo:
  inherits: _sb3
  tags:
    - rl

  argv:
    --algo: ppo
    --env: HalfCheetahBulletEnv-v0
    -n: '-1'
    --num-threads: '-1'
    --seed: '0'
    --vec-env: subproc
    --device: auto
    --: [-params, n_envs:16, n_steps:512, n_epochs:20, n_timesteps:50000]

td3:
  inherits: _sb3
  tags:
    - rl

  argv:
    --algo: td3
    --env: HalfCheetahBulletEnv-v0 # Default: CartPole-v1
    --n-eval-envs: '1'
    --n-timesteps: '50000' # Default: '-1'
    --num-threads: '-1'
    --log-interval: '-1'
    --eval-episodes: '5'
    --save-freq: '-1'
    --seed: '0' # Default: -1
    --vec-env: subproc # Default: dummy
    --device: auto
    --n-trials: '10' # Default: 500
    --n-jobs: '1'


opt-1_3b-gpus:
  inherits: _accelerate_opt
  tags:
    - multigpu
  
  argv:
    --model_name: "facebook/opt-1.3b"
    --per_gpu_batch_size: 1

  use_deepspeed: false
  num_machines: 1

opt-1_3b-nodes:
  inherits: opt-1_3b-gpus

  tags:
    - multinode
  requires_capabilities:
    - "len(nodes) >= ${num_machines}"

  docker_image: "ghcr.io/mila-iqia/milabench:cuda-nightly"
  num_machines: 2

opt-6_7b-gpus:
  inherits: _accelerate_opt
  tags:
    - multigpu

  argv:
    --model_name: "facebook/opt-6.7b"
    --per_gpu_batch_size: 1

  num_machines: 1

opt-6_7b-nodes:
  inherits: opt-6_7b-gpus
  tags:
    - multinode

  requires_capabilities:
    - "len(nodes) >= ${num_machines}"

  docker_image: "ghcr.io/mila-iqia/milabench:cuda-nightly"
  num_machines: 2


opt-1_3b-gpus:
  enabled: true
  weight: 5.0

opt-1_3b-nodes:
  enabled: true
  weight: 10.0

opt-6_7b-gpus:
  enabled: true
  weight: 5.0

opt-6_7b-nodes:
  enabled: true
  weight: 10.0





#
# replace OPT
#
llm-small-gpus:
  inherits: _accelerate_opt
  tags:
    - multigpu
  
  argv:
    --model_name: "meta-llama/Meta-Llama-3.1-8B"
    --per_gpu_batch_size: 1

  use_deepspeed: false
  num_machines: 1

llm-small-nodes:
  inherits: llm-small-gpus

  tags:
    - multinode
  requires_capabilities:
    - "len(nodes) >= ${num_machines}"

  docker_image: "ghcr.io/mila-iqia/milabench:cuda-nightly"
  num_machines: 2

llm-big-gpus:
  inherits: _accelerate_opt
  tags:
    - multigpu

  argv:
    --model_name: "meta-llama/Meta-Llama-3.1-70B-Instruct"
    --per_gpu_batch_size: 1

  num_machines: 1

llm-big-nodes:
  inherits: llm-big-gpus
  tags:
    - multinode

  requires_capabilities:
    - "len(nodes) >= ${num_machines}"

  docker_image: "ghcr.io/mila-iqia/milabench:cuda-nightly"
  num_machines: 2



resnet152:
  inherits: _timm
  tags:
    - vision
    - classification
    - convnet
    - resnet
  plan:
    method: per_gpu
  argv:
    --model: resnet152
    --batch-size: 256

resnet152-gpus:
  inherits: resnet152
  tags:
    - multigpu
  plan:
    method: njobs
    n: 1


vit_l_32:
  inherits: _timm
  tags:
    - vision
    - classification
    - transformer
    - multigpu

  plan:
    method: njobs
    n: 1
  argv:
    --model: vit_large_patch32_224
    --batch-size: 256

davit_large:
  inherits: _timm
  tags:
    - vision
    - classification
    - transformer
  plan:
    method: per_gpu
  argv:
    --model: davit_large
    --batch-size: 128
    --lr-base: 0.01

davit_large-gpus:
  inherits: davit_large
  tags:
    - multigpu
  plan:
    method: njobs
    n: 1



stargan:
  inherits: _defaults
  tags:
    - vision
    - gan
    - resnet
    - noio
  definition: ../benchmarks/stargan
  group: stargan
  install_group: torch
  plan:
    method: per_gpu
  argv:
    --image_size: 512
    --c_dim: 5
    --batch_size: 16
    --dataset: "synth"
    --celeba_image_dir: "{milabench_data}"
    --log_dir: "{milabench_extra}/logs"
    --model_save_dir: "{milabench_extra}/models"
    --sample_dir: "{milabench_extra}/samples"
    --result_dir: "{milabench_extra}/results"
    --num_workers: "auto({n_worker}, 8)"

dlrm:
  inherits: _defaults
  tags:
    - nlp
    - rl
    
  definition: ../benchmarks/dlrm
  group: dlrm
  install_group: torch
  plan:
    method: njobs
    n: 1
  argv:
    --num-batches: 1000
    --data-generation: "random"
    --arch-mlp-bot: "512-512-64"
    --arch-mlp-top: "1024-1024-1024-1"
    --arch-sparse-feature-size: 64
    --arch-embedding-size: "1000000-1000000-1000000-1000000-1000000-1000000-1000000-1000000"
    --num-indices-per-lookup: 100
    --arch-interaction-op: "dot"
    --numpy-rand-seed: "727"
    --print-freq: 999999
    --mini-batch-size: 16384
    --test-mini-batch-size: 16384
    --test-num-workers: 0
    --use-gpu: true
    --num-workers: "auto({n_worker}, 8)"

rwkv:
  inherits: _defaults
  definition: ../benchmarks/rwkv
  group: rwkv
  install_group: torch
  tags:
    - llm
    - rnn
    - unsupported-rocm
  plan:
    method: per_gpu
  argv:
    --data_type: "dummy"
    --ctx_len: 128
    --epoch_steps: 1000
    --epoch_count: 20
    --epoch_begin: 0
    --epoch_save: 0
    --micro_bsz: 16
    --n_layer: 12
    --n_embd: 768
    --pre_ffn: 0
    --head_qk: 0
    --lr_init: 6e-4
    --lr_final: 1e-5
    --warmup_steps: 0
    --beta1: 0.9
    --beta2: 0.99
    --adam_eps: 1e-8
    --accelerator: "gpu"
    --devices: 1
    --precision: "tf32"
    --strategy: "ddp_find_unused_parameters_false"
    --grad_cp: 0
    --random_seed: 1234
    --enable_progress_bar: "False"

efficientnet_b4:
  inherits: _torchvision

  tags:
    - vision
    - classification
    - convnet

  argv:
    --model: efficientnet_b4
    --batch-size: 256

efficientnet_b7:
  inherits: _torchvision
  tags:
    - vision
    - classification
    - convnet
  argv:
    --model: efficientnet_b7
    --batch-size: 128


# replaced by diffusion
stargan:
  enabled: false
  weight: 0.0

# replaced by dinov2
vit_l_32:
  enabled: false
  weight: 0.0

davit_large:
  enabled: false
  weight: 0.0

davit_large-gpus:
  enabled: false
  weight: 0.0

# replaced by lightning
resnet152:
  enabled: false
  weight: 0.0

# replaced by lightning-gpus
resnet152-gpus:
  enabled: false
  weight: 0.0

# Too similar to things we already have
efficientnet_b4:
  enabled: false
  weight: 1.0

efficientnet_b7:
  enabled: false
  weight: 1.0

# Hard to make work reliably
rwkv:
  enabled: false
  weight: 1.0



dlrm:
  enabled: true
  weight: 1.0

super-slomo:
  enabled: false
  weight: 1.0


super-slomo:
  inherits: _defaults
  tags:
    - vision
    - video-interpolation
    - unet
    - convnet
    - monogpu
  definition: ../benchmarks/super-slomo
  group: super-slomo
  install_group: torch
  plan:
    method: per_gpu
  argv:
    --train_batch_size: 64
    --dataset_root: "{milabench_data}/FakeImageNet"
    --loader: pytorch
    --num_workers: "auto({n_worker}, 8)"