name: tests

on:
  # Runs every sunday
  schedule:
      - cron: '0 0 * * SUN'

  # Runs for pull requests
  pull_request:
    branches:
      - master

  # Runs on publish
  release:
    types:
      [published]

  # Allow manual triggers
  workflow_dispatch:


jobs:
  tests:
    strategy:
      matrix:
        arch: [cuda, rocm]

    runs-on: [self-hosted, "${{ matrix.arch }}"]

    defaults:
      run:
        shell: bash -el {0}
        
    env:
      MILABENCH_CONFIG: "config/ci-${{ matrix.arch }}.yaml"
      MILABENCH_BASE: "output"
      MILABENCH_ARGS: ""
      MILABENCH_GPU_ARCH: "${{ matrix.arch }}"
    
    steps:
      - uses: actions/checkout@v3
    
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: false
          python-version: 3.9
          miniconda-version: "latest"
          activate-environment: test

      - name: Pytorch Sanity
        run: |
          groups
          whoami
          if [[ "${{ matrix.arch }}" == "cuda" ]]; then
              python -m pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cu118
          else
              python -m pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/rocm5.4.2
          fi
          # Makes sure we are detecting 2 devices before continuing
          python -c "import torch, sys; sys.exit(torch.cuda.device_count() != 2)"
          
      - name: dependencies
        run: |
          if [[ ! -d "~/.cargo/bin" ]]; then
            wget --no-check-certificate --secure-protocol=TLSv1_2 -qO- https://sh.rustup.rs | sh -s -- -y 
          fi
          export PATH="~/.cargo/bin:${PATH}"
          python -m pip install -U pip
          python -m pip install -U poetry
          poetry lock --no-update
          poetry install

      - name: install benchmarks
        run: |
          milabench install $MILABENCH_CONFIG --base $MILABENCH_BASE $MILABENCH_ARGS

      - name: prepare benchmarks
        run: |
          milabench prepare $MILABENCH_CONFIG --base $MILABENCH_BASE $MILABENCH_ARGS

      - name: tests
        run: |
          export PATH="/opt/rocm-5.4.3/bin:$PATH"
          pytest tests/

      - name: use pytorch nightly
        run: |
          if [[ "${{ matrix.arch }}" == "cuda" ]]; then
            bash script/nightly_overrides.bash
          else
            bash script/nightly_overrides_rocm.bash
          fi

      - name: run benchmarks
        run: |
          export PATH="/opt/rocm-5.4.3/bin:$PATH"
          milabench run $MILABENCH_CONFIG --base $MILABENCH_BASE $MILABENCH_ARGS

      - name: Summary
        run: |
          milabench summary $MILABENCH_BASE/runs/
