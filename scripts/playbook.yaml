#
# ansible-galaxy role install geerlingguy.postgresql
#

# - name: Add PostgreSQL Repo
#   hosts: database
#   become: yes
#   tasks:
#     - name: Repo Key
#       ansible.builtin.get_url:
#         url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
#         dest: /etc/apt/keyrings/PostgreSQL.asc

#     - name: Add Repo
#       ansible.builtin.apt_repository:
#         repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/PostgreSQL.asc] https://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main
#         state: present
    
#     - name: Update apt packages
#       become: true
#       apt:
#         update_cache: yes
#         cache_valid_time: 8640



- name: Install ACL
  hosts: database
  become: yes
  tasks:
    - name: Install ACL
      ansible.builtin.apt:
        name: acl
        state: present

- name: Install PostgreSQL database
  hosts: database
  become: yes

  vars_files:
   - config.yaml

  roles:
   - role: geerlingguy.postgresql
     postgresql_global_config_options:
       - option: listen_addresses
         value: '*'
       - option: log_directory
         value: 'log'

     postgresql_hba_entries:
       - {type: local, database: all, user: postgres, auth_method: peer}
       - {type: local, database: all, user: all, auth_method: peer}
       - {type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: "{{ postgresql_auth_method }}"}
       - {type: host, database: all, user: all, address: '::1/128', auth_method: "{{ postgresql_auth_method }}"}
       - {type: host, database: all, user: all, address: '192.168.0.0/16', auth_method: "{{ postgresql_auth_method }}"}
  
- name: Initialize PostgreSQL Database
  hosts: database 
  become: true
  become_method: su
  become_user: 'postgres'
  become_exe: 'sudo -p "Password: " su -'

  tasks:
    - name: Create Database
      community.postgresql.postgresql_db:
        name: milabench

    - name: Create Tables
      community.postgresql.postgresql_query:
        db: milabench
        autocommit: true
        query: "{{ lookup('ansible.builtin.file', '{{ playbook_dir }}/tables.sql') }}"
  
    - name: Create Write User
      community.postgresql.postgresql_user:
        db: milabench
        name: milabench_write
        password: 1234
        
    - name: Create Read User
      community.postgresql.postgresql_user:
        db: milabench
        name: milabench_read
        password: 1234

    - name: Setup Privileges
      community.postgresql.postgresql_query:
        db: milabench
        query:
          - GRANT usage ON SCHEMA public TO milabench_write, milabench_read
          - GRANT select ON metrics,packs,execs TO milabench_write, milabench_read
          - GRANT insert,update ON metrics,packs,execs TO milabench_write
          - GRANT usage ON ALL sequences IN SCHEMA public TO milabench_write;

    # - name: GRANT USAGE ON SCHEMA publics
    #   community.postgresql.postgresql_privs:
    #     type: schema
    #     objs: public
    #     db: milabench
    #     state: present
    #     privs: usage
    #     role: milabench_write,milabench_read

    # - name: GRANT SELECT ON DATABSE milabench to reader,writer
    #   community.postgresql.postgresql_privs:
    #     database: milabench
    #     role: milabench_write,milabench_read
    #     privs: SELECT
    #     grant_option: true
    #     state: present
    #     objs: metrics,packs,execs
    #     schema: public
    
    # - name: GRANT INSERT,UPDATE ON DATABSE milabench to writer
    #   community.postgresql.postgresql_privs:
    #     role: milabench_write
    #     database: milabench
    #     privs: INSERT,UPDATE
    #     grant_option: true
    #     state: present
    #     objs: metrics,packs,execs
    #     schema: public

    # - name: GRANT USAGE ON ALL SEQUENCES IN SCHEMA public to writer
    #   community.postgresql.postgresql_privs:
    #     role: milabench_write
    #     database: milabench
    #     privs: ALL
    #     state: present
    #     objs: SEQUENCES
    #     schema: public
